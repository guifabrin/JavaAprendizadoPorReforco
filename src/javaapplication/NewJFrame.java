/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author guilherme
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    int SIZE;
    int BUTTON_SIZE = 120;
    int BUTTON_MARGIN = 10;
    int LOCK = -1;
    
    JButton[][] Paineis;
    
    public NewJFrame(int SIZE) throws IOException {
        initComponents();
        
        this.SIZE = SIZE;
        
        Paineis = new JButton[SIZE][SIZE];

        for (int i=0; i<SIZE; i++){
            for (int j=0; j<SIZE; j++){
                Paineis[i][j] = new JButton();
                Paineis[i][j].setSize(BUTTON_SIZE,BUTTON_SIZE);
                Paineis[i][j].setLocation(j*BUTTON_SIZE+BUTTON_MARGIN,i*BUTTON_SIZE+BUTTON_MARGIN);
                
                final int k = i;
                final int l = j;
                
                Paineis[i][j].addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e){
                            
                    }
                });   
                
                this.add(Paineis[i][j]);
            }    
        }
        
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        int IMAGE_SIZE = BUTTON_SIZE/2;
        Image img = ImageIO.read(getClass().getResource("index.jpeg")).getScaledInstance(IMAGE_SIZE, IMAGE_SIZE, java.awt.Image.SCALE_SMOOTH);

        final JButton WALL = new JButton();
        
        WALL.setLocation(BUTTON_MARGIN,BUTTON_SIZE*SIZE+SIZE*BUTTON_MARGIN-20);
        WALL.addActionListener(new ActionListener() {
 
            public void actionPerformed(ActionEvent e)
            {
                LOCK = 0;
                WALL.setEnabled(false);
            }
        });   
        
        WALL.setIcon(new ImageIcon(img));
        WALL.setSize(120,120);
        
        this.add(WALL);
        
        JButton WIN = new JButton();
        WIN.setLocation(BUTTON_MARGIN+120,BUTTON_SIZE*SIZE+SIZE*BUTTON_MARGIN-20);
        WIN.setSize(120,120);
        WIN.addActionListener(new ActionListener() {
 
            public void actionPerformed(ActionEvent e)
            {
                LOCK = 1;
                WALL.setEnabled(false);
            }
        });  
        
                    
        this.add(WIN);
        
        JButton LOSE = new JButton();
        LOSE.setLocation(BUTTON_MARGIN+240,BUTTON_SIZE*SIZE+SIZE*BUTTON_MARGIN-20);
        LOSE.setSize(120,120);
        LOSE.addActionListener(new ActionListener() {
 
            public void actionPerformed(ActionEvent e)
            {
                LOCK = 2;
                WALL.setEnabled(false);
            }
        });  
        this.add(LOSE);
        
        
        JButton START = new JButton();
        START.setLocation(BUTTON_MARGIN+360,BUTTON_SIZE*SIZE+SIZE*BUTTON_MARGIN-20);
        START.setSize(120,120);
        START.addActionListener(new ActionListener() {
 
            public void actionPerformed(ActionEvent e)
            {
                LOCK = 3;
                WALL.setEnabled(false);
            }
        });  
        this.add(START);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 267, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 196, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void UpdateButtons(int[][] Table, double[][][] States) throws IOException{
      int IMAGE_SIZE = BUTTON_SIZE/2;
      for (int i=0; i<SIZE; i++){
            for (int j=0; j<SIZE; j++){
                if (Table[i][j]==2){
                    Image img = ImageIO.read(getClass().getResource("index.jpeg")).getScaledInstance(IMAGE_SIZE, IMAGE_SIZE, java.awt.Image.SCALE_SMOOTH);
                    Paineis[i][j].setIcon(new ImageIcon(img));
                } else if (Table[i][j]==1){
                    Image img = ImageIO.read(getClass().getResource("winner-win.jpg")).getScaledInstance(IMAGE_SIZE, IMAGE_SIZE, java.awt.Image.SCALE_SMOOTH);
                    Paineis[i][j].setIcon(new ImageIcon(img));
                } else if (Table[i][j]==-1){
                    Image img = ImageIO.read(getClass().getResource("index2.jpeg")).getScaledInstance(IMAGE_SIZE, IMAGE_SIZE, java.awt.Image.SCALE_SMOOTH);
                    Paineis[i][j].setIcon(new ImageIcon(img));
                } else {
                    Image img = ImageIO.read(getClass().getResource(JavaApplication.MaxIndex(States[i][j])+".png")).getScaledInstance(IMAGE_SIZE, IMAGE_SIZE, java.awt.Image.SCALE_SMOOTH);
                    Paineis[i][j].setIcon(new ImageIcon(img));
                }
            }
      }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
